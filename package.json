{
  "name": "YFI",
  "version": "0.0.1",
  "description": "YFI Access",
  "main": "index.js",
  "author": "",
  "license": "",
  "scripts": {
    "clean:css": "rimraf docs/styles",
    "clean:js": "rimraf docs/scripts",
    "clean:images": "rimraf docs/images",
    "clean:html": "rimraf docs/*.html; rimraf docs/**/*.html",
    "clean": "rimraf docs",
    "sass": "mkdirp docs/styles; ((ls src/styles/*.sass || ls src/styles/**/*.sass || ls src/styles/*.scss || ls src/styles/**/*.scss) 2>/dev/null && node-sass --indented-syntax true --output-style compressed -o docs/styles src/styles) || true",
    "cssmove": "rsync -r -I --include=\"*/\" --include=\"*.css\" --exclude=\"*\" src/styles/* docs/styles",
    "autoprefixer": "SOURCE='docs/styles/*.css' COMMAND='postcss -u autoprefixer -r docs/styles/*.css' npm run testfiles; SOURCE='docs/styles/**/*.css' COMMAND='postcss -u autoprefixer -r docs/styles/**/*.css' npm run testfiles",
    "cssnano": "SOURCE='docs/styles/*.css' COMMAND='postcss -u cssnano -r docs/styles/*.css' npm run testfiles; SOURCE='docs/styles/**/*.css' COMMAND='postcss -u cssnano -r docs/styles/**/*.css' npm run testfiles",
    "uglify:prep": "mkdirp docs/scripts; cp -f src/scripts/_includes.txt docs/scripts/_includes.txt; test `tail -c 1 docs/scripts/_includes.txt` && echo \"\n\" >> docs/scripts/_includes.txt",
    "uglify:list": "ls src/scripts/*.js 2>/dev/null && echo src/scripts/*.js >> docs/scripts/_includes.txt || true; ls src/scripts/**/*.js 2>/dev/null && echo src/scripts/**/*.js >> docs/scripts/_includes.txt || true",
    "uglify:run": "grep -qE '^[^#].*(.(js|JS)$)' docs/scripts/_includes.txt && uglifyjs $(cat docs/scripts/_includes.txt | egrep -v \"^\\s*(#|$)\") -m -c -o docs/scripts/app.js || true",
    "uglify:clean": "rimraf docs/scripts/_includes.txt",
    "uglify": "run-s uglify:*",
    "svgmin": "htmlclean -o docs/images -i src/images",
    "imagemin": "mkdirp docs/images; imagemin src/images/**/*.{png,jpg,jpeg,gif,ico} -o docs/images",
    "othermove": "rsync -r -I --exclude=\"images\" --exclude=\"scripts\" --exclude=\"images\" --exclude=\"styles\" --exclude=\"views\" src/ docs",
    "pug": "pug src/views -o docs",
    "htmlmove": "rsync -r -I --include=\"*/\" --include=\"*.html\" --exclude=\"*\" src/views/* docs",
    "htmlmin": "htmlclean -o docs -i src/views",
    "build:css": "run-s sass cssmove autoprefixer cssnano",
    "build:js": "run-s uglify",
    "build:images": "run-s svgmin imagemin",
    "build:other": "run-s othermove",
    "build:html": "run-s pug htmlmove htmlmin",
    "build": "run-s build:*",
    "watch:css": "onchange \"src/styles\" -- run-s build:css",
    "watch:js": "onchange \"src/scripts\" -- run-s build:js",
    "watch:images": "onchange \"src/images\" -- run-s build:images",
    "watch:html": "onchange \"src/views\" -- run-s build:html",
    "watch:other": "onchange \"src/**/*\" -e \"src/images\" -e \"src/scripts\" -e \"src/styles\" -e \"src/views\" -- clean build:other",
    "watch": "run-p watch:*",
    "server": "browser-sync start --f \"docs/**/*\" --server \"docs\" --port 8081 --ui-port 8082 1>/dev/tty",
    "running:verbose": "run-p watch",
    "running:quiet": "run-p watch 1>/dev/null",
    "running": "run-p running:quiet server",
    "testfiles": "((ls $SOURCE) 2>/dev/null && $COMMAND) || true",
    "begin:verbose": "run-s clean build running",
    "begin:quiet": "run-s clean build 1>/dev/null running",
    "start": "run-s begin:quiet"
  },
  "devDependencies": {
    "autoprefixer": "^8.4.1",
    "browser-sync": "^2.27.10",
    "cssnano": "^4.0.0-rc.2",
    "htmlclean-cli": "^1.0.9",
    "imagemin-cli": "^3.0.0",
    "mkdirp": "^0.5.1",
    "node-sass": "^4.9.0",
    "npm-run-all": "^4.1.3",
    "onchange": "^3.3.0",
    "postcss-cli": "^5.0.0",
    "pug-cli": "^1.0.0-alpha6",
    "rimraf": "^2.6.2",
    "svgo": "^1.0.5",
    "uglify-js": "^3.3.23"
  },
  "dependencies": {
    "frow": "git://github.com/Beg-in/frow.git#letsgo",
    "letsgo": "git://github.com/Beg-in/letsGo.git#parallel"
  }
}
